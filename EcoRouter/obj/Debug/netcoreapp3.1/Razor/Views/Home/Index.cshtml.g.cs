#pragma checksum "C:\Users\User01\source\repos\EcoRouter\EcoRouter\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "466cd7fe93d381ec4cfcdb2266551da1c7a58e1e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\User01\source\repos\EcoRouter\EcoRouter\Views\_ViewImports.cshtml"
using EcoRouter;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\User01\source\repos\EcoRouter\EcoRouter\Views\_ViewImports.cshtml"
using EcoRouter.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"466cd7fe93d381ec4cfcdb2266551da1c7a58e1e", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"acde29ee16ffb8748c8e27f1e62471c6fb15e29e", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<RouteViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
            WriteLiteral(@"<style>
    table {
        border-collapse: collapse;
        border: 1px solid black;
    }

    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }

    #table_sec {
        margin-top: 30px;
    }

    #tableRoutes {
        margin: auto;
        border: 1px solid black;
        table-layout: fixed;
        width: 80%;
        margin-top: 10px;
    }

    th, tr, td {
        text-align: center;
        border: 1px solid black;
    }

    th {
        background-color: #e6e2e2
    }

    h4 {
        margin: auto;
    }
</style>
<div>
    <div class=""row"">
        <div id=""current"" style=""width: 30%; height: auto"" class=""align-self-center"">
            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "466cd7fe93d381ec4cfcdb2266551da1c7a58e1e4718", async() => {
                WriteLiteral(@"
                <div class=""form-group col-md-8"">
                    <label for=""carconsumption"">Car Fuel Consumption </label>
                    <input type=""number"" class=""form-control requiredfields"" id=""carconsumption"">
                </div>
                <div class=""form-group col-md-8"">
                    <label for=""enginestart"">Engine Start Effort</label>
                    <input type=""number"" class=""form-control requiredfields"" id=""enginestart"">
                </div>
                <div class=""form-group col-md-12"">
                    <button type=""button"" class=""btn btn-primary"" id=""calculate"" data-id="""">Calculate</button>
                    <button type=""button"" class=""btn btn-secondary"" id=""clear"">Clear</button>
                </div>
            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
        </div>
        <div id=""dvMap"" style=""width: 70%; height: 500px;""></div>
    </div>
    <div class=""row"" id=""table_sec"">
        <h4>List of Recorded Routes</h4>
        <table id=""tableRoutes"">
            <tr>
                <th>Latitude A</th>
                <th>Longitude A</th>
                <th>Latitude B</th>
                <th>Longitude B</th>
                <th>Created Date</th>
                <th>Fuel Estimation</th>
                <th>Distance</th>
                <th></th>
            </tr>
");
#nullable restore
#line 83 "C:\Users\User01\source\repos\EcoRouter\EcoRouter\Views\Home\Index.cshtml"
              foreach (var route in Model._routes)
                {
                    var destPoint = Model._points.First(a => a.MarkID == route.DestinationId);
                    var departPoint = Model._points.First(a => a.MarkID == route.DepartureId);

#line default
#line hidden
#nullable disable
            WriteLiteral("                    <tr>\r\n                        <td>");
#nullable restore
#line 88 "C:\Users\User01\source\repos\EcoRouter\EcoRouter\Views\Home\Index.cshtml"
                       Write(departPoint.Latitude);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        <td>");
#nullable restore
#line 89 "C:\Users\User01\source\repos\EcoRouter\EcoRouter\Views\Home\Index.cshtml"
                       Write(departPoint.Longitude);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        <td>");
#nullable restore
#line 90 "C:\Users\User01\source\repos\EcoRouter\EcoRouter\Views\Home\Index.cshtml"
                       Write(destPoint.Latitude);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        <td>");
#nullable restore
#line 91 "C:\Users\User01\source\repos\EcoRouter\EcoRouter\Views\Home\Index.cshtml"
                       Write(destPoint.Longitude);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        <td>");
#nullable restore
#line 92 "C:\Users\User01\source\repos\EcoRouter\EcoRouter\Views\Home\Index.cshtml"
                       Write(route.CreatedAt);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        <td>");
#nullable restore
#line 93 "C:\Users\User01\source\repos\EcoRouter\EcoRouter\Views\Home\Index.cshtml"
                       Write(route.FuelEstimation);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        <td>");
#nullable restore
#line 94 "C:\Users\User01\source\repos\EcoRouter\EcoRouter\Views\Home\Index.cshtml"
                       Write(route.Distance);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        <td>");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "466cd7fe93d381ec4cfcdb2266551da1c7a58e1e9741", async() => {
                WriteLiteral("<input type=\"button\" value=\"EDIT\" style=\"width:80%\"");
                BeginWriteAttribute("id", " id=\"", 3053, "\"", 3072, 1);
#nullable restore
#line 95 "C:\Users\User01\source\repos\EcoRouter\EcoRouter\Views\Home\Index.cshtml"
WriteAttributeValue("", 3058, route.RouteID, 3058, 14, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" class=\"btn_edit\">");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("</td>\r\n                    </tr>\r\n");
#nullable restore
#line 97 "C:\Users\User01\source\repos\EcoRouter\EcoRouter\Views\Home\Index.cshtml"
                }
            

#line default
#line hidden
#nullable disable
            WriteLiteral("        </table>\r\n    </div>\r\n</div>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "466cd7fe93d381ec4cfcdb2266551da1c7a58e1e11707", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script type=""text/javascript"" src=""https://maps.googleapis.com/maps/api/js?key=AIzaSyDrEqgXfJgJpTutwQSThg65LLedmXE1uFo""></script>
<script type=""text/javascript"">

    let map;

    let distance = 0;

    let _points = [];

    let markersArray = [];

    let directionsRenderer = new google.maps.DirectionsRenderer();

    window.onload = function () {

        let mapOptions = {
            center: new google.maps.LatLng(50.84, 4.34),
            zoom: 10,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        map = new google.maps.Map(document.getElementById(""dvMap""), mapOptions);

        map.addListener('click', function (e) {
            console.log(e);
            if (markersArray.length < 2) addMarker(e.latLng);
        });

        directionsRenderer.setMap(map);

        ValidateFields();
    }

    function addMarker(latLng) {
        let marker = new google.maps.Marker({
            map: map,
            position: latLng
        });

       ");
            WriteLiteral(@" markersArray.push(marker);
        _points.push({
            MarkID: """",
            Longitude: marker.getPosition().lng().toFixed(6).toString(),
            Latitude: marker.getPosition().lat().toFixed(6).toString()
        });

        ValidateFields();
    }

    function ClearMap() {

        markersArray = [];

        let mapOptions = {
            center: new google.maps.LatLng(_points[0].Latitude, _points[0].Longitude),
            zoom: 12,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        map = new google.maps.Map(document.getElementById(""dvMap""), mapOptions);

        map.addListener('click', function (e) {
            console.log(e);
            if (markersArray.length < 2) addMarker(e.latLng);
        });

        directionsRenderer = new google.maps.DirectionsRenderer();

        directionsRenderer.setMap(map);

        _points = [];

        $("".requiredfields"").val("""");
        $(""#calculate"").data(""id"", """");

        ValidateFields(");
            WriteLiteral(@");
    }

    function Calculate() {

        let carConsumption = parseFloat($(""#carconsumption"").val());
        let engineStart = parseFloat($(""#enginestart"").val());

        let calc = Round2decimals((distance * carConsumption + engineStart) / 1000);
        let roundDist = Round2decimals(distance / 1000);

        let id = $(""#calculate"").data(""id"");

        if (id != """") {
            var row = $(""#"" + id).closest('tr');
            row.find(""td"").eq(0).html(_points[0].Latitude);
            row.find(""td"").eq(1).html(_points[0].Longitude);
            row.find(""td"").eq(2).html(_points[1].Latitude);
            row.find(""td"").eq(3).html(_points[1].Longitude);
            row.find(""td"").eq(5).html(calc);
            row.find(""td"").eq(6).html(roundDist);
        }
        else {

            $(""#calculate"").data(""id"", createUUID());

            var date = new Date().toLocaleString();

            var row = '<tr><td>LatitudeA</td><td>LongitudeA</td><td>LatitudeB</td><td>Longit");
            WriteLiteral(@"udeB</td><td>Created</td><td>Fuel</td><td>Distance</td><td><form><input type=""button"" value=""EDIT"" style=""width:80%"" id=""RouteID"" class=""btn_edit""></form></td></tr>';
            row = row.replace(""LatitudeA"", _points[0].Latitude);
            row = row.replace(""LongitudeA"", _points[0].Longitude);
            row = row.replace(""LatitudeB"", _points[1].Latitude);
            row = row.replace(""LongitudeB"", _points[1].Longitude);
            row = row.replace(""Created"", date);
            row = row.replace(""Fuel"", calc);
            row = row.replace(""Distance"", roundDist);
            row = row.replace(""RouteID"", $(""#calculate"").data(""id""));

            $('#tableRoutes > tbody:last-child').append(row);

            $("".btn_edit"").unbind().on(""click"", function (e) { Edit(e); });

        }

         var route = new function () {
                this.RouteID = $(""#calculate"").data(""id""),
                this.Distance = roundDist.toString(),
                this.FuelEstimation = calc.toString()");
            WriteLiteral(@",
                this.DepartureId = """",
                this.DestinationId = """",
                this.CreatedBy = """",
                this.CreatedAt = """",
                this.ModifiedBy = """",
                this.ModifiedAt = """",
                this.IsActive = true
        }

        $.ajax({
            url: """);
#nullable restore
#line 236 "C:\Users\User01\source\repos\EcoRouter\EcoRouter\Views\Home\Index.cshtml"
             Write(Url.Action("SaveRoute"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
            type: 'POST',
            datatype: 'json',
            data: { _points, route },
            success: function (data) {
                console.log(data.d);
            }
        });

        $(""#calculate"").data(""id"", """");
    }

    function Round2decimals(num) {
        return Math.round((num + 0.00001) * 100) / 100;
    }

    function ValidateFields() {

        let empty = false;
        $("".requiredfields"").each(function () {
            if ($(this).val() == """" || _points.length < 2) {
                empty = true;
                return false;
            }
        });

        if (empty)
            $(""#calculate"").prop(""disabled"", true);
        else
            $(""#calculate"").prop(""disabled"", false);
    }

    function displayRouteData(response, status) { // anonymous function to capture directions
        if (status !== 'OK') {
            window.alert('Directions request failed due to ' + status);
            return;
        } else {
        ");
            WriteLiteral(@"    directionsRenderer.setDirections(response); // Add route to the map
            var directionsData = response.routes[0].legs[0]; // Get data about the mapped route
            if (!directionsData) {
                window.alert('Directions request failed');
                return;
            }
            else {
                distance = directionsData.distance.value;

                Calculate();
            }
        }
    }

    function Edit(e) {

        let id = e.currentTarget.id;

        $(""#calculate"").data(""id"", id);

        $("".requiredfields"").val(null);

        markersArray = [];
        _points = [];

        var row = $(""#""+id).closest('tr');
        var latA = parseFloat(row.find(""td"").eq(0).html().replace("","", "".""));
        var longA = parseFloat(row.find(""td"").eq(1).html().replace("","", "".""));
        var latB = parseFloat(row.find(""td"").eq(2).html().replace("","", "".""));
        var longB = parseFloat(row.find(""td"").eq(3).html().replace("","", "".""));

   ");
            WriteLiteral(@"     var mapOptions = {
            center: new google.maps.LatLng(latA, longA),
            zoom: 12,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        map = new google.maps.Map(document.getElementById(""dvMap""), mapOptions);

        var myLatlng = new google.maps.LatLng(latA, longA);
        var markerA = new google.maps.Marker({
            position: myLatlng,
            map: map
        });

        _points.push({
            MarkID: """",
            Longitude: longA.toString(),
            Latitude: latA.toString()
        });
        markersArray.push(markerA);

        var myLatlng = new google.maps.LatLng(latB, longB);
        var markerB = new google.maps.Marker({
            position: myLatlng,
            map: map
        });

        _points.push({
            MarkID: """",
            Longitude: longB.toString(),
            Latitude: latB.toString()
        });
        markersArray.push(markerB);

        google.maps.event.addListener(marker");
            WriteLiteral(@"A, 'dragend', function (evt) {
            _points[0].Longitude = evt.latLng.lng().toFixed(6).toString();
            _points[0].Latitude = evt.latLng.lat().toFixed(6).toString();
        });

        google.maps.event.addListener(markerB, 'dragend', function (evt) {
            _points[1].Longitude = evt.latLng.lng().toFixed(6).toString();
            _points[1].Latitude = evt.latLng.lat().toFixed(6).toString();
        });

        
        directionsRenderer = new google.maps.DirectionsRenderer();
        directionsRenderer.setMap(map);

        ValidateFields();
    }

    function createUUID() {

        var s = [];
        var hexDigits = ""0123456789abcdef"";
        for (var i = 0; i < 36; i++) {
            s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);
        }
        s[14] = ""4"";  // bits 12-15 of the time_hi_and_version field to 0010
        s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01
        s[8] = ");
            WriteLiteral(@"s[13] = s[18] = s[23] = ""-"";

        var uuid = s.join("""");
        return uuid;
    }

    $("".requiredfields"").on(""input"", function (e) { ValidateFields(); });

    $(""#calculate"").on(""click"", function (e) {

        const routeM = {
            origin: new google.maps.LatLng(_points[0].Latitude, _points[0].Longitude),
            destination: new google.maps.LatLng(_points[1].Latitude, _points[1].Longitude),
            travelMode: 'DRIVING'
        };

        let directionsService = new google.maps.DirectionsService();
        directionsService.route(routeM, displayRouteData);

    });

    $(""#clear"").on(""click"", function (e) { ClearMap(); });

    $("".btn_edit"").on(""click"", function (e) { Edit(e); });

</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<RouteViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
